Lab report for Linked List Lab - jkharrat
Timestamp: 2013-10-02 10:26:04

|  :scenario |                                    :title |                                   :result | :score |
|------------+-------------------------------------------+-------------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                      Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. |      Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Fail: Student tests did not detect error. |      0 |
|    broke-4 |          Search doesn't handle base case. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. |      Pass: Student tests detected errors. |      5 |
|    broke-6 |                           Delete doesn't. |      Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. |      Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. |      Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Fail: Student tests did not detect error. |      0 |
|      total |                               Total Score |                                           |     90 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00516 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

................................

Finished in 0.00605 seconds
32 examples, 0 failures


** Details for Insert at end mishandles nil.

........FF.FF.........F.........

Failures:

  1) insert-at-end Creates a cons cell.
     Expected: nil
     not to =: nil
     /home/grader/quarry/linked-list-lab/jkharrat/broke-1/spec/linked_lists/core_spec.clj:44

  2) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-1/spec/linked_lists/core_spec.clj:48

  3) insert-at-end should add elements to the end
     Expected: 40
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-1/spec/linked_lists/core_spec.clj:57

  4) insert-at-end should be chainable
     Expected: 30
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-1/spec/linked_lists/core_spec.clj:61

  5) delete should be chainable
     Expected: 30
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-1/spec/linked_lists/core_spec.clj:111

Finished in 0.03942 seconds
32 examples, 5 failures


** Details for Sorted insert sorts in reverse order.

...............F................

Failures:

  1) sorted insert should Add an element to the list
     Expected: 2
          got: 1 (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-2/spec/linked_lists/core_spec.clj:73

Finished in 0.01496 seconds
32 examples, 1 failures


** Details for Sorted insert doesn't recycle memory.

................................

Finished in 0.00887 seconds
32 examples, 0 failures


** Details for Search doesn't handle base case.

..................F..........F..

Failures:

  1) search Should retrun nil if not found.
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/jkharrat/broke-4/spec/linked_lists/core_spec.clj:89

  2) efficient-delete should return the same list if it can't find the element
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/jkharrat/broke-4/spec/linked_lists/core_spec.clj:141

Finished in 0.00656 seconds
32 examples, 2 failures


** Details for Delete removes all copies.

.....................F........F.

Failures:

  1) delete should delete the element once.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-5/spec/linked_lists/core_spec.clj:107

  2) efficient-delete should delete the element once.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-5/spec/linked_lists/core_spec.clj:145

Finished in 0.04717 seconds
32 examples, 2 failures


** Details for Delete doesn't.

....................FF........FF

Failures:

  1) delete should remove element from list if found and return a copy.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-6/spec/linked_lists/core_spec.clj:103

  2) delete should delete the element once.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-6/spec/linked_lists/core_spec.clj:107

  3) efficient-delete should delete the element once.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-6/spec/linked_lists/core_spec.clj:145

  4) efficient-delete should remove element from list if found and return a copy.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-6/spec/linked_lists/core_spec.clj:149

Finished in 0.02604 seconds
32 examples, 4 failures


** Details for Delete all only deletes one.

..........................FF....

Failures:

  1) delete-all shouldn't delete just one copy of the list.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
     not to =: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
     /home/grader/quarry/linked-list-lab/jkharrat/broke-7/spec/linked_lists/core_spec.clj:128

  2) delete-all should remove ALL elements from list if found and return a copy.
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-7/spec/linked_lists/core_spec.clj:132

Finished in 0.02954 seconds
32 examples, 2 failures


** Details for Delete all truncates list.

.........................F......

Failures:

  1) delete-all should remove element from list if found and return a copy.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-8/spec/linked_lists/core_spec.clj:124

Finished in 0.04760 seconds
32 examples, 1 failures


** Details for Efficient delete doesn't delete.

.........................F....FF

Failures:

  1) delete-all should remove element from list if found and return a copy.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-9/spec/linked_lists/core_spec.clj:124

  2) efficient-delete should delete the element once.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-9/spec/linked_lists/core_spec.clj:145

  3) efficient-delete should remove element from list if found and return a copy.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/jkharrat/broke-9/spec/linked_lists/core_spec.clj:149

Finished in 0.05071 seconds
32 examples, 3 failures


** Details for Efficient delete doesn't return original.

................................

Finished in 0.00575 seconds
32 examples, 0 failures
